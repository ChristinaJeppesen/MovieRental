version: '3.4'

services:
  customermicroservice:
    container_name: customerservice
    image: ${DOCKER_REGISTRY-}customermicroservice
    build:
      context: .
      dockerfile: CustomerMicroService/Dockerfile





  db:
    container_name: db
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - DB_HOST=localhost

    ports:
      - '5432:5432'
    volumes:
      - pgdata:/usr/var/lib/postgresql/data

  apigateway:
    container_name: apigateway
    image: ${DOCKER_REGISTRY-}apigateway
    build:
      context: .
      dockerfile: ApiGateway/Dockerfile
    ports:
      - 8001:80

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
     - "RABBITMQ_DEFAULT_PASS=guest"
     - "RABBITMQ_DEFAULT_USER=guest"

  messagemicroservice:
    container_name: messagemicroservice
    image: ${DOCKER_REGISTRY-}messagemicroservice
    build:
      context: .
      dockerfile: MessageMicroService/Dockerfile

  testsanity:
    container_name: testsanity
    image: ${DOCKER_REGISTRY-}testsanity
    build:
      context: .
      dockerfile: TestSanity/Dockerfile

  moviemicroservice:
    container_name: moviemicroservice
    image: ${DOCKER_REGISTRY-}moviemicroservice
    build:
      context: .
      dockerfile: MovieMicroService/Dockerfile
    restart: on-failure
    depends_on:
      - rabbitmq
    links:
        - rabbitmq



volumes:
  pgdata:
